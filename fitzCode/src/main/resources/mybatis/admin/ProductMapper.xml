<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.fitzcode.admin.mapper.AdminProductMapper">

    <!-- 상품 등록 -->
    <insert id="insertProduct"
            parameterType="ProductDTO"
            useGeneratedKeys="true"
            keyProperty="productId">
        INSERT INTO PRODUCT (product_name, description, brand, price, stock, category_id, image_url, status, created_at, discounted_price)
        VALUES (#{productName}, #{description}, #{brand}, #{price}, #{stock}, #{categoryId}, #{imageUrl},
        #{status, typeHandler=kr.co.fitzcode.admin.handler.ProductStatusTypeHandler}, NOW(), #{discountedPrice})
    </insert>

    <!-- 추가 이미지 등록 -->
    <insert id="insertProductImage">
        INSERT INTO PRODUCT_IMAGE (product_id, image_url, image_order)
        VALUES (#{productId}, #{imageUrl}, #{imageOrder})
    </insert>

    <!-- 사이즈별 재고 등록 -->
    <insert id="insertProductSize">
        INSERT INTO PRODUCT_SIZE (product_id, size_code, stock)
        VALUES (#{productId}, #{sizeCode}, #{stock})
    </insert>

    <!-- 전체 상품 조회 (페이지네이션, 정렬, 검색) -->
    <select id="getAllProducts" resultType="ProductDTO">
        SELECT
        product_id AS productId,
        product_name AS productName,
        description,
        brand,
        price,
        stock,
        category_id AS categoryId,
        image_url AS imageUrl,
        status AS status,
        discounted_price AS discountedPrice,
        created_at AS createdAt
        FROM PRODUCT
        <where>
            <if test="keyword != null and keyword != ''">
                product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        ORDER BY product_id
        <choose>
            <when test="sort == 'asc'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 카테고리별 상품 조회 (페이지네이션, 정렬, 검색) -->
    <select id="getProductsByCategory" resultType="ProductDTO">
        SELECT
        product_id AS productId,
        product_name AS productName,
        description,
        brand,
        price,
        stock,
        category_id AS categoryId,
        image_url AS imageUrl,
        status AS status,
        discounted_price AS discountedPrice,
        created_at AS createdAt
        FROM PRODUCT
        <where>
            category_id = #{categoryId}
            <if test="keyword != null and keyword != ''">
                AND product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        ORDER BY product_id
        <choose>
            <when test="sort == 'asc'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 상위 카테고리의 모든 하위 카테고리 상품 조회 (페이지네이션, 정렬, 검색) -->
    <select id="getProductsByParentCategory" resultType="ProductDTO">
        SELECT
        p.product_id AS productId,
        p.product_name AS productName,
        p.description,
        p.brand,
        p.price,
        p.stock,
        p.category_id AS categoryId,
        p.image_url AS imageUrl,
        p.status AS status,
        p.discounted_price AS discountedPrice,
        p.created_at AS createdAt
        FROM PRODUCT p
        JOIN CATEGORY c ON p.category_id = c.category_id
        <where>
            c.parent_id = #{parentCategoryId}
            <if test="keyword != null and keyword != ''">
                AND p.product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
        ORDER BY p.product_id
        <choose>
            <when test="sort == 'asc'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 전체 상품 개수 조회 + 검색 -->
    <select id="countAllProducts" resultType="int">
        SELECT COUNT(*) FROM PRODUCT
        <where>
            <if test="keyword != null and keyword != ''">
                product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <!-- 특정 카테고리 상품 개수 조회 + 검색 -->
    <select id="countProductsByCategory" resultType="int">
        SELECT COUNT(*) FROM PRODUCT
        <where>
            category_id = #{categoryId}
            <if test="keyword != null and keyword != ''">
                AND product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <!-- 상위 카테고리 상품 개수 조회 + 검색 -->
    <select id="countProductsByParentCategory" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCT p
        JOIN CATEGORY c ON p.category_id = c.category_id
        <where>
            c.parent_id = #{parentCategoryId}
            <if test="keyword != null and keyword != ''">
                AND p.product_name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <!-- 상위 카테고리 목록 조회 -->
    <select id="getParentCategories" resultType="ProductCategoryDTO">
        SELECT
        category_id AS categoryId,
        parent_id AS parentId,
        code,
        name,
        depth
        FROM CATEGORY
        WHERE parent_id IS NULL
        ORDER BY name ASC
    </select>

    <!-- 상위 카테고리의 하위 카테고리 목록 조회 -->
    <select id="getChildCategories" resultType="ProductCategoryDTO">
        SELECT category_id AS categoryId, name
        FROM CATEGORY
        WHERE parent_id = #{parentId}
    </select>

    <!-- 카테고리 검증 -->
    <select id="countCategoryById" parameterType="long" resultType="int">
        SELECT COUNT(*) FROM CATEGORY WHERE category_id = #{categoryId}
    </select>

    <!-- 주목받는 상품 조회 -->
    <select id="selectPickProducts" resultType="PickProductDTO">
        SELECT
        pp.pick_id AS pickId,
        pp.product_id AS productId,
        pp.display_order AS displayOrder,
        p.product_name AS "product.productName",
        p.description AS "product.description",
        p.brand AS "product.brand",
        p.price AS "product.price",
        p.stock AS "product.stock",
        p.category_id AS "product.categoryId",
        p.image_url AS "product.imageUrl",
        p.status AS "product.status",
        p.discounted_price AS "product.discountedPrice",
        p.created_at AS "product.createdAt"
        FROM PICK_PRODUCT pp
        JOIN PRODUCT p ON pp.product_id = p.product_id
        ORDER BY pp.display_order ASC
    </select>

    <!-- 주목받는 상품 전체 삭제 -->
    <delete id="deleteAllPickProducts">
        DELETE FROM PICK_PRODUCT
    </delete>

    <!-- 주목받는 상품 삽입 -->
    <insert id="insertPickProduct" parameterType="PickProductDTO">
        INSERT INTO PICK_PRODUCT (product_id, display_order)
        VALUES (#{productId}, #{displayOrder})
    </insert>

    <!-- 할인율 높은 상품 조회 -->
    <select id="selectTopDiscountedProducts" resultType="ProductDTO">
        SELECT
        product_id AS productId,
        product_name AS productName,
        description,
        brand,
        price,
        stock,
        category_id AS categoryId,
        image_url AS imageUrl,
        status,
        discounted_price AS discountedPrice,
        created_at AS createdAt
        FROM PRODUCT
        WHERE discounted_price IS NOT NULL AND price > discounted_price
        ORDER BY (price - discounted_price) / price DESC
        LIMIT #{limit}
    </select>

    <!-- 상품 검색 필터 적용 조회 -->
    <select id="getProductsByFilter" resultType="ProductDTO">
        SELECT p.*
        FROM PRODUCT p
        JOIN CATEGORY c ON p.category_id = c.category_id
        <where>
            <if test="codes != null and codes.size() > 0">
                AND c.CODE IN
                <foreach item="code" collection="codes" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
            <if test="searchText != null and searchText != ''">
                AND (
                p.brand LIKE CONCAT('%', #{searchText}, '%')
                OR p.description LIKE CONCAT('%', #{searchText}, '%')
                OR p.product_name LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
        </where>
        ORDER BY p.product_id
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <!-- 상품 검색 필터 적용 개수 조회 -->
    <select id="getProductsCountByFilter" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCT p
        JOIN CATEGORY c ON p.category_id = c.category_id
        <where>
            <if test="codes != null and codes.size() > 0">
                c.CODE IN
                <foreach item="code" collection="codes" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
            <if test="searchText != null and searchText != ''">
                <if test="codes != null and codes.size() > 0">
                    AND
                </if>
                (
                p.brand LIKE CONCAT('%', #{searchText}, '%')
                OR p.description LIKE CONCAT('%', #{searchText}, '%')
                OR p.product_name LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
        </where>
    </select>

</mapper>