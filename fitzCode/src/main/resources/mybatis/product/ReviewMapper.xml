<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.fitzcode.product.mapper.ReviewMapper">

    <resultMap id="ReviewDTOMap" type="kr.co.fitzcode.common.dto.ReviewDTO">
        <id property="reviewId" column="review_id"/>
        <result property="productId" column="product_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="rating" column="rating"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <collection property="imageUrls" ofType="java.lang.String">
            <result column="image_url"/>
        </collection>
    </resultMap>

    <select id="findByProductId" parameterType="long" resultMap="ReviewDTOMap">
        SELECT r.review_id, r.product_id, r.user_id, u.user_name, r.rating, r.content, r.created_at, r.updated_at, ri.image_url
        FROM REVIEW r
        JOIN USER u ON r.user_id = u.user_id
        LEFT JOIN REVIEW_IMAGE ri ON r.review_id = ri.review_id
        WHERE r.product_id = #{productId}
    </select>

    <select id="findByProductIdWithImage" parameterType="long" resultMap="ReviewDTOMap">
        SELECT r.review_id, r.product_id, r.user_id, u.user_name, r.rating, r.content, r.created_at, r.updated_at, ri.image_url
        FROM REVIEW r
        JOIN USER u ON r.user_id = u.user_id
        JOIN REVIEW_IMAGE ri ON r.review_id = ri.review_id
        WHERE r.product_id = #{productId}
    </select>

    <select id="findByProductIdOrderByRatingDesc" parameterType="long" resultMap="ReviewDTOMap">
        SELECT r.review_id, r.product_id, r.user_id, u.user_name, r.rating, r.content, r.created_at, r.updated_at, ri.image_url
        FROM REVIEW r
        JOIN USER u ON r.user_id = u.user_id
        LEFT JOIN REVIEW_IMAGE ri ON r.review_id = ri.review_id
        WHERE r.product_id = #{productId}
        ORDER BY r.rating DESC
    </select>

    <select id="findByProductIdOrderByRatingAsc" parameterType="long" resultMap="ReviewDTOMap">
        SELECT r.review_id, r.product_id, r.user_id, u.user_name, r.rating, r.content, r.created_at, r.updated_at, ri.image_url
        FROM REVIEW r
        JOIN USER u ON r.user_id = u.user_id
        LEFT JOIN REVIEW_IMAGE ri ON r.review_id = ri.review_id
        WHERE r.product_id = #{productId}
        ORDER BY r.rating ASC
    </select>

    <select id="findById" parameterType="long" resultMap="ReviewDTOMap">
        SELECT r.review_id, r.product_id, r.user_id, u.user_name, r.rating, r.content, r.created_at, r.updated_at, ri.image_url
        FROM REVIEW r
        JOIN USER u ON r.user_id = u.user_id
        LEFT JOIN REVIEW_IMAGE ri ON r.review_id = ri.review_id
        WHERE r.review_id = #{id}
    </select>

    <insert id="insertReview" parameterType="kr.co.fitzcode.common.dto.ReviewDTO" useGeneratedKeys="true" keyProperty="reviewId">
        INSERT INTO REVIEW (product_id, user_id, rating, content, created_at, updated_at)
        VALUES (#{productId}, #{userId}, #{rating}, #{content}, NOW(), NOW())
    </insert>

    <insert id="insertReviewImage">
        INSERT INTO REVIEW_IMAGE (review_id, image_url, uploaded_at)
        VALUES (#{reviewId}, #{imageUrl}, NOW())
    </insert>

    <select id="countReviewsByUserAndProduct" resultType="int">
        SELECT COUNT(*)
        FROM REVIEW
        WHERE user_id = #{userId}
        AND product_id = #{productId}
    </select>

    <select id="findByUserIdAndProductId" resultMap="ReviewDTOMap">
        SELECT r.review_id, r.product_id, r.user_id, u.user_name, r.rating, r.content, r.created_at, r.updated_at, ri.image_url
        FROM REVIEW r
        JOIN USER u ON r.user_id = u.user_id
        LEFT JOIN REVIEW_IMAGE ri ON r.review_id = ri.review_id
        WHERE r.user_id = #{userId}
        AND r.product_id = #{productId}
    </select>

    <delete id="deleteReviewImages">
        DELETE FROM REVIEW_IMAGE
        WHERE review_id = #{reviewId}
    </delete>

    <delete id="deleteReview">
        DELETE FROM REVIEW
        WHERE review_id = #{reviewId}
    </delete>

    <select id="getRatingCounts">
        SELECT rating, COUNT(*) AS rating_count
        FROM REVIEW
        WHERE product_id = #{productId}
        GROUP BY rating
        ORDER BY rating
    </select>

</mapper>