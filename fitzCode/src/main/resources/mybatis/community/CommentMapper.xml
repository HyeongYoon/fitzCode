<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.fitzcode.community.mapper.CommentMapper">

    <!-- 유저 정보 조회 -->
    <select id="getUserById" parameterType="int" resultType="UserDTO">
        SELECT user_id, user_name, profile_image
        FROM USER
        WHERE user_id = #{userId}
    </select>

    <!-- 댓글 조회 -->
    <select id="getCommentsByPostId" parameterType="int" resultType="Map">
        SELECT
        c.comment_id AS comment_id,
        c.post_id AS post_id,
        c.user_id AS user_id,
        c.parent_comment_id AS parent_comment_id,
        c.content AS content,
        u.user_name AS user_name,
        u.profile_image AS profile_image,
        (SELECT COUNT(*) FROM COMMENT_LIKE lc WHERE lc.comment_id = c.comment_id) AS like_count
        FROM COMMENT c
        JOIN USER u ON c.user_id = u.user_id
        WHERE c.post_id = #{postId}
        ORDER BY c.created_at ASC
    </select>

    <!-- 특정 댓글 조회 -->
    <select id="getCommentById" parameterType="int" resultType="CommentDTO">
        SELECT comment_id, post_id, user_id, parent_comment_id, content, created_at, updated_at
        FROM COMMENT
        WHERE comment_id = #{commentId}
    </select>

    <!-- 댓글 추가 -->
    <insert id="insertComment" parameterType="CommentDTO" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO COMMENT (post_id, user_id, parent_comment_id, content)
        VALUES (#{postId}, #{userId}, #{parentCommentId}, #{content})
    </insert>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="int">
        DELETE FROM COMMENT
        WHERE comment_id = #{commentId}
    </delete>

    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="CommentDTO">
        UPDATE COMMENT
        SET content = #{content}
        WHERE comment_id = #{commentId}
    </update>

    <!-- 게시물 댓글 수 조회 -->
    <select id="countPostComments" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM COMMENT
        WHERE post_id = #{postId}
    </select>

    <!-- comment_count 업데이트 -->
    <update id="updateCommentCount" parameterType="map">
        UPDATE POST
        SET comment_count = #{commentCount}
        WHERE post_id = #{postId}
    </update>

    <!-- 댓글 좋아요 추가 -->
    <insert id="addCommentLike" parameterType="CommentLikeDTO">
        INSERT INTO COMMENT_LIKE (comment_id, user_id)
        VALUES (#{commentId}, #{userId})
    </insert>

    <!-- 댓글 좋아요 삭제 -->
    <delete id="deleteCommentLike" parameterType="CommentLikeDTO">
        DELETE FROM COMMENT_LIKE
        WHERE comment_id = #{commentId} AND user_id = #{userId}
    </delete>

    <!-- 특정 댓글 좋아요 수 조회 -->
    <select id="countCommentLikes" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM COMMENT_LIKE
        WHERE comment_id = #{commentId}
    </select>

    <!-- 사용자가 특정 댓글에 좋아요를 눌렀는지 확인 -->
    <select id="isCommentLikedByUser" parameterType="CommentLikeDTO" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM COMMENT_LIKE
        WHERE comment_id = #{commentId} AND user_id = #{userId}
    </select>
</mapper>