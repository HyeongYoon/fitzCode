<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.fitzcode.product.mapper.ProductMapper">
    <select id="getProductsByPage" parameterType="int" resultType="kr.co.fitzcode.product.dto.ProductDTO">
        SELECT product_id, product_name, description, brand, price, stock, category_id, image_url, created_at, discounted_price
        FROM PRODUCT
        ORDER BY product_id
        LIMIT 20 OFFSET #{offset}
    </select>

    <select id="getAllProducts" resultType="kr.co.fitzcode.product.dto.ProductDTO">
        SELECT product_id, product_name, description, brand, price, stock, category_id, image_url, created_at, discounted_price
        FROM PRODUCT
    </select>

    <select id="getProductById" resultType="kr.co.fitzcode.product.dto.ProductDTO" parameterType="int">
        SELECT product_id, product_name, description, brand, price, stock, category_id, image_url, created_at, discounted_price
        FROM PRODUCT
        WHERE product_id = #{productId}
    </select>

    <insert id="insertProduct" parameterType="kr.co.fitzcode.product.dto.ProductDTO">
        INSERT INTO PRODUCT
        (product_name, description, brand, price, stock, category_id, image_url, created_at, discounted_price)
        VALUES
        (#{productName}, #{description}, #{brand}, #{price}, #{stock}, #{categoryId}, #{imageUrl}, NOW(), #{price})
    </insert>

    <insert id="insertManyProducts" parameterType="java.util.List">
        INSERT INTO PRODUCT
        (product_name, description, brand, price, stock, category_id, image_url, created_at, discounted_price)
        VALUES
        <foreach collection="list" item="product" separator=",">
            (#{product.productName}, #{product.description}, #{product.brand},
            #{product.price}, #{product.stock}, #{product.categoryId},
            #{product.imageUrl}, NOW(), #{price})
        </foreach>
    </insert>


    <update id="updateProduct" parameterType="kr.co.fitzcode.product.dto.ProductDTO">
        UPDATE PRODUCT
        <set>
            <if test="product_name != null">
                product_name = #{productName},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="brand != null">
                brand = #{brand},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="stock != null">
                stock = #{stock},
            </if>
            <if test="category_id != null">
                category_id = #{categoryId},
            </if>
            <if test="image_url != null">
                image_url = #{imageUrl},
            </if>
            <if test="discounted_price != null">
                discounted_price = #{discounted_price},
            </if>
        </set>
        WHERE product_id = #{productId};
    </update>


    <delete id="deleteProductById" parameterType="int">
        DELETE * FROM PRODUCT
        WHERE product_id = #{productId}
    </delete>


    <select id="getCountOfAllProducts" resultType="int">
        SELECT COUNT(*) FROM PRODUCT;
    </select>



    <select id="getProductsByFilter" resultType="kr.co.fitzcode.product.dto.ProductDTO">
        SELECT p.*
        FROM PRODUCT p
        JOIN CATEGORY c ON p.category_id = c.category_id
        <where>
            <if test="codes != null and codes.size() > 0">
                AND c.CODE IN
                <foreach item="code" collection="codes" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
            <if test="searchText != null and searchText != ''">
                AND (
                p.brand LIKE CONCAT('%', #{searchText}, '%')
                OR p.description LIKE CONCAT('%', #{searchText}, '%')
                OR p.product_name LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
        </where>
        ORDER BY p.product_id
        LIMIT 20 OFFSET #{offset}
    </select>




    <select id="getProductsCountByFilter" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCT p
        JOIN CATEGORY c ON p.category_id = c.category_id
        <where>
            <if test="codes != null and codes.size() > 0">
                c.CODE IN
                <foreach item="code" collection="codes" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>

            <if test="searchText != null and searchText != ''">
                <if test="codes != null and codes.size() > 0">
                    AND
                </if>
                (
                p.brand LIKE CONCAT('%', #{searchText}, '%')
                OR p.description LIKE CONCAT('%', #{searchText}, '%')
                OR p.product_name LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
        </where>
    </select>






</mapper>